///$tab Auto-generated section
///$autogenerated
Set dataManagerTables = '','Patient';
//This block renames script tables from non generated section which conflict with the names of managed tables

For each name in $(dataManagerTables) 
    Let index = 0;
    Let currentName = name; 
    Let tableNumber = TableNumber(name); 
    Let matches = 0; 
    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
        index = index + 1; 
        currentName = name & '-' & index; 
        tableNumber = TableNumber(currentName) 
        matches = Match('$(currentName)', $(dataManagerTables));
    Loop 
    If index > 0 then 
            Rename Table '$(name)' to '$(currentName)'; 
    EndIf; 
Next; 
Set dataManagerTables = ;


Unqualify *;

__countryAliasesBase:
LOAD
	Alias AS [__Country],
	ISO3Code AS [__ISO3Code]
FROM [lib://AttachedFiles/countryAliases.qvd]
(qvd);

__countryGeoBase:
LOAD
	ISO3Code AS [__ISO3Code],
	ISO2Code AS [__ISO2Code],
	Polygon AS [__Polygon]
FROM [lib://AttachedFiles/countryGeo.qvd]
(qvd);

__countryName2IsoThree:
MAPPING LOAD
	__Country,
	__ISO3Code
RESIDENT __countryAliasesBase;

__countryCodeIsoThree2Polygon:
MAPPING LOAD
	__ISO3Code,
	__Polygon
RESIDENT __countryGeoBase;

[Patient]:
LOAD
	[PatientID],
	[PatientSSN],
	[Fname],
	[CTAS _Level],
	[Lname],
	[DOB],
	[Gender],
	[Nationality],
	[Phone_number],
	APPLYMAP( '__countryCodeIsoThree2Polygon', APPLYMAP( '__countryName2IsoThree', LOWER([Nationality])), '-') AS [Patient.Nationality_GeoInfo]
 FROM [lib://AttachedFiles/Patient.csv]
(txt, codepage is 28591, embedded labels, delimiter is ',', msq);



TAG FIELD [Nationality] WITH '$geoname', '$relates_Patient.Nationality_GeoInfo';
TAG FIELD [Patient.Nationality_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_Nationality';

DROP TABLES __countryAliasesBase, __countryGeoBase;